version: 0.2

env:
  variables:
    CONTAINER_REPOSITORY_URL: "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/example-laravel:latest"
    TAG_NAME: "latest"
    SECRET_ID: "ExampleLaravelEnv"

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - docker pull $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/example-laravel:latest || true

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker production image...
      - docker build --cache-from $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/example-laravel:latest  --tag $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/example-laravel:latest  .
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/example-laravel:latest
      - echo Generating the Dockerfile...
      - echo "FROM $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/example-laravel:latest" > Dockerfile
      - echo Generating the docker-compose...
      - |
        echo -e "version: '3'\nservices:\n  web:\n    build: .\n    ports:\n      - '80:80'" > docker-compose.yml
      - echo Zipping up the deployment package...
      - zip -r deployment.zip Dockerfile .ebextensions docker-compose.yaml

artifacts:
  files:
    - deployment.zip
