version: 0.2

env:
  variables:
    CONTAINER_REPOSITORY_URL: "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/example-laravel:latest"
    TAG_NAME: "latest"
    SECRET_ID: "ExampleLaravelEnv"

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email)
      - docker pull $CONTAINER_REPOSITORY_URL:$TAG_NAME || true

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker production image...
      - docker build --cache-from $CONTAINER_REPOSITORY_URL:$TAG_NAME --tag $CONTAINER_REPOSITORY_URL:$TAG_NAME .
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $CONTAINER_REPOSITORY_URL
      - echo Generating Dockerrun.aws.json...
      - >
        printf '{"AWSEBDockerrunVersion": "1","Image": {"Name": "%s", "Update": "true"},"Ports": [{"ContainerPort": "80"}],"Logging": "/var/log/nginx"}' "$CONTAINER_REPOSITORY_URL" > Dockerrun.aws.json
      - echo Generating .ebextensions...
      - mkdir -p .ebextensions
      - >
        printf 'Resources:\n  AWSEBAutoScalingGroup:\n    Metadata:\n      AWS::CloudFormation::Authentication:\n        S3AccessCreds:\n          type: S3\n          roleName: aws-elasticbeanstalk-ec2-role\n      AWS::CloudFormation::Init:\n        configSets:\n          default:\n            - config\n        config:\n          commands:\n            01-get-secrets:\n              command: "/opt/elasticbeanstalk/bin/get-config environment -k SECRET_STRING | jq -r .SecretString | jq -r \\\'to_entries|map(\\\\\\\"export \\\\\\\\(\\\\\\\".key\\\\\\\")=\\\\\\\"\\\\\\\(\\\\\\\".value|tostring\\\\\\\")\\\\\\\")|.[]\\\\\\\' > /opt/elasticbeanstalk/hooks/appdeploy/enact/99myappenv.sh"\n' $AWS_DEFAULT_REGION > .ebextensions/01_env.config
      - echo Zipping up the deployment package...
      - zip -r deployment.zip Dockerrun.aws.json .ebextensions

artifacts:
  files:
    - deployment.zip
